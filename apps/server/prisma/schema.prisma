generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model currency {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @db.VarChar(255)
  transactions         transactions[]
  underlyingsecurities underlyingsecurities[]
}

model exchanges {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(255)
  issuerexchanges issuerexchanges[]
}

model insiders {
  id                Int                 @id @default(autoincrement())
  name              String?             @db.VarChar(255)
  issuerId          Int?
  ceasedToBeInsider String?             @db.VarChar(255)
  issuers           issuers?            @relation(fields: [issuerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "insiders_ibfk_1")
  relationstoissuer relationstoissuer[]
  transactions      transactions[]

  @@index([issuerId], map: "issuerId")
}

model issuerexchanges {
  issuerId   Int
  exchangeId Int
  issuers    issuers   @relation(fields: [issuerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "issuerexchanges_ibfk_1")
  exchanges  exchanges @relation(fields: [exchangeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "issuerexchanges_ibfk_2")

  @@id([issuerId, exchangeId])
  @@index([exchangeId], map: "exchangeId")
}

model issuers {
  id              Int               @id @default(autoincrement())
  sedarId         Int?              @unique(map: "sedarId")
  name            String?           @unique(map: "name") @db.VarChar(255)
  tickerId        Int?
  sizeId          Int?
  insiders        insiders[]
  issuerexchanges issuerexchanges[]
  tickers         tickers?          @relation(fields: [tickerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "issuers_ibfk_1")
  sizes           sizes?            @relation(fields: [sizeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "issuers_ibfk_2")
  transactions    transactions[]

  @@index([id], map: "issuers_index_0")
  @@index([sedarId], map: "issuers_index_1")
  @@index([name], map: "issuers_index_2")
  @@index([sizeId], map: "sizeId")
  @@index([tickerId], map: "tickerId")
}

model relationstoissuer {
  type      relationstoissuer_type
  insiderId Int
  insiders  insiders               @relation(fields: [insiderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "relationstoissuer_ibfk_1")

  @@id([type, insiderId])
  @@index([insiderId], map: "insiderId")
}

model securitydesignations {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @db.VarChar(255)
  transactions         transactions[]
  underlyingsecurities underlyingsecurities[]
}

model sizes {
  id      Int       @id @default(autoincrement())
  name    String?   @db.VarChar(255)
  issuers issuers[]
}

model tickers {
  id      Int       @id @default(autoincrement())
  name    String?   @db.VarChar(255)
  issuers issuers[]
}

model transactions {
  id                    Int                                 @id @default(autoincrement())
  sediId                Int?
  insiderId             Int?
  issuerId              Int?
  securityId            Int?
  trnFlagId             Int?
  trnDate               DateTime?                           @db.Date
  filingDate            DateTime?                           @db.Date
  ownershipType         transactions_ownershipType?
  ownershipExtraInfo    String?                             @db.VarChar(255)
  trnNatureCode         Int?
  nb                    Int?
  nbType                transactions_nbType?
  price                 Float?                              @db.Float
  priceCurrencyId       Int?
  closingBalance        Float?                              @db.Float
  closingBalanceType    transactions_closingBalanceType?
  calculatedBalance     Float?                              @db.Float
  calculatedBalanceType transactions_calculatedBalanceType?
  underlyingSecurityId  Int?
  GeneralRemarks        String?                             @db.VarChar(255)
  issuers               issuers?                            @relation(fields: [issuerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_1")
  insiders              insiders?                           @relation(fields: [insiderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_2")
  securitydesignations  securitydesignations?               @relation(fields: [securityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_3")
  trnflag               trnflag?                            @relation(fields: [trnFlagId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_4")
  trnnatures            trnnatures?                         @relation(fields: [trnNatureCode], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_5")
  underlyingsecurities  underlyingsecurities?               @relation(fields: [underlyingSecurityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_6")
  currency              currency?                           @relation(fields: [priceCurrencyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_7")

  @@index([priceCurrencyId], map: "priceCurrencyId")
  @@index([securityId], map: "securityId")
  @@index([id], map: "transactions_index_3")
  @@index([sediId], map: "transactions_index_4")
  @@index([trnFlagId], map: "trnFlagId")
  @@index([underlyingSecurityId], map: "underlyingSecurityId")
  @@index([insiderId], map: "transactions_index_5")
  @@index([issuerId], map: "transactions_index_6")
  @@index([trnDate], map: "transactions_index_7")
  @@index([filingDate], map: "transactions_index_8")
  @@index([trnNatureCode], map: "transactions_index_9")
}

model trnflag {
  id           Int            @id @default(autoincrement())
  name         String?        @db.VarChar(255)
  transactions transactions[]
}

model trnnatures {
  code         Int            @id
  description  String?        @db.VarChar(255)
  transactions transactions[]
}

model underlyingsecurities {
  id                      Int                               @id @default(autoincrement())
  securityId              Int?
  nb                      Int?
  nbType                  underlyingsecurities_nbType?
  Balance                 Int?
  BalanceType             underlyingsecurities_BalanceType?
  exercisePrice           Float?                            @db.Float
  exercisePriceCurrencyId Int?
  expiryDate              DateTime?                         @db.Date
  transactions            transactions[]
  securitydesignations    securitydesignations?             @relation(fields: [securityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "underlyingsecurities_ibfk_1")
  currency                currency?                         @relation(fields: [exercisePriceCurrencyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "underlyingsecurities_ibfk_2")

  @@index([exercisePriceCurrencyId], map: "exercisePriceCurrencyId")
  @@index([securityId], map: "securityId")
}

enum relationstoissuer_type {
  Issuer
  Subsidiary
  TenPercentHolder
  Director
  SeniorOfficer
  DirOrOfficerOfTenPercentHolder
  DirOrOfficerOfInsiderOrSubsidiary
  DeemedInsider
}

enum underlyingsecurities_nbType {
  Quantity
  Value
}

enum underlyingsecurities_BalanceType {
  Quantity
  Value
}

enum transactions_ownershipType {
  Direct
  Indirect
  ControlOrDirection
}

enum transactions_nbType {
  Quantity
  Value
}

enum transactions_closingBalanceType {
  Quantity
  Value
}

enum transactions_calculatedBalanceType {
  Quantity
  Value
}
